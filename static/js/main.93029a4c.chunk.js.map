{"version":3,"sources":["components/NewTaskForm/NewTaskForm.jsx","components/Timer/Timer.jsx","components/Task/Task.jsx","components/TaskList/TaskList.jsx","components/TaskFilter/TasksFilter.jsx","components/Footer/Footer.jsx","components/App/App.jsx","index.js"],"names":["NewTaskForm","props","onChange","event","setState","target","name","value","onSubmit","preventDefault","state","label","minutes","seconds","handleAdd","trim","this","className","placeholder","type","min","max","Component","Timer","handlePause","clearInterval","timerId","isPlaying","handlePlay","setInterval","updateTimer","sec","parseInt","onClick","defaultProps","Task","inputValue","id","handleEdit","handleDelete","onToggleEditing","onToggleDone","done","editing","creationDate","timeCreated","formatDistanceToNow","Date","includeSeconds","checked","String","TaskList","todos","tasks","map","item","itemProps","TasksFilter","filter","onFilterChange","button","Footer","itemsLeft","clearCompleted","App","todoData","createTask","uuidv4","toggleProp","arr","propName","el","todo","newTask","text","filterTasks","JSON","parse","localStorage","getItem","setItem","stringify","itemsDone","length","filteredTasks","app","React","createElement","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93029a4c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class NewTaskForm extends Component {\n  static propTypes = {\n    handleAdd: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      label: '',\n      minutes: '',\n      seconds: '',\n    };\n  }\n\n  onChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const { label, minutes, seconds } = this.state;\n    const { handleAdd } = this.props;\n\n    if (label.trim() === '') {\n      this.setState({\n        label: '',\n        minutes: '',\n        seconds: '',\n      });\n      return;\n    }\n\n    handleAdd(label, minutes, seconds);\n\n    this.setState({\n      label: '',\n      minutes: '',\n      seconds: '',\n    });\n  };\n\n  render() {\n    const { label, minutes, seconds } = this.state;\n\n    return (\n      <form className=\"new-todo-form\" onSubmit={this.onSubmit}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          type=\"text\"\n          name=\"label\"\n          value={label}\n          onChange={this.onChange}\n        />\n        <input\n          className=\"new-todo-form__timer\"\n          placeholder=\"Min\"\n          type=\"number\"\n          name=\"minutes\"\n          min=\"0\"\n          max=\"60\"\n          value={minutes}\n          onChange={this.onChange}\n        />\n        <input\n          className=\"new-todo-form__timer\"\n          placeholder=\"Sec\"\n          type=\"number\"\n          name=\"seconds\"\n          min=\"0\"\n          max=\"59\"\n          value={seconds}\n          onChange={this.onChange}\n        />\n        <input className=\"visually-hidden\" type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Timer extends Component {\n  static defaultProps = {\n    isPlaying: false,\n    minutes: '0',\n    seconds: '0',\n  };\n\n  static propTypes = {\n    isPlaying: PropTypes.bool,\n    minutes: PropTypes.string,\n    seconds: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { isPlaying, minutes, seconds } = this.props;\n\n    this.state = {\n      isPlaying,\n      minutes,\n      seconds,\n    };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  handlePause = () => {\n    clearInterval(this.timerId);\n\n    this.setState({\n      isPlaying: false,\n    });\n  };\n\n  handlePlay = () => {\n    const { isPlaying } = this.state;\n\n    if (!isPlaying) {\n      this.setState({\n        isPlaying: true,\n      });\n      this.timerId = setInterval(this.updateTimer, 1000);\n    }\n  };\n\n  updateTimer = () => {\n    const { minutes, seconds } = this.state;\n\n    let sec = parseInt(seconds, 10);\n    let min = parseInt(minutes, 10);\n\n    sec += 1;\n\n    if (sec === 60) {\n      sec = 0;\n      min += 1;\n    }\n\n    this.setState({ minutes: min, seconds: sec });\n  };\n\n  render() {\n    const { minutes, seconds } = this.state;\n\n    return (\n      <span className=\"description\">\n        <button className=\"icon icon-play\" onClick={this.handlePlay} type=\"button\" aria-label=\"play\" />\n        <button className=\"icon icon-pause\" onClick={this.handlePause} type=\"button\" aria-label=\"pause\" />\n        {minutes < 10 ? `0${minutes}` : minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n      </span>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNow } from 'date-fns';\nimport Timer from '../Timer/Timer';\n\nexport default class Task extends Component {\n  static defaultProps = {\n    id: '',\n    label: 'Default task',\n    done: false,\n    editing: false,\n    creationDate: String(new Date()),\n    minutes: '0',\n    seconds: '0',\n  };\n\n  static propTypes = {\n    id: PropTypes.string,\n    label: PropTypes.string,\n    done: PropTypes.bool,\n    editing: PropTypes.bool,\n    creationDate: PropTypes.string,\n    handleEdit: PropTypes.func.isRequired,\n    handleDelete: PropTypes.func.isRequired,\n    onToggleDone: PropTypes.func.isRequired,\n    onToggleEditing: PropTypes.func.isRequired,\n    minutes: PropTypes.string,\n    seconds: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    const { label } = this.props;\n\n    this.state = {\n      inputValue: label,\n    };\n  }\n\n  onChange = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const { inputValue } = this.state;\n    const { id, handleEdit, handleDelete, onToggleEditing } = this.props;\n\n    if (inputValue.trim() === '') {\n      handleDelete();\n      return;\n    }\n    handleEdit(id, inputValue);\n    onToggleEditing(id);\n  };\n\n  render() {\n    const { label, handleDelete, onToggleDone, onToggleEditing, done, editing, creationDate, minutes, seconds } =\n      this.props;\n    const { inputValue } = this.state;\n\n    const timeCreated = formatDistanceToNow(new Date(creationDate), {\n      includeSeconds: true,\n    });\n\n    let className;\n\n    if (done) {\n      className = 'completed';\n    } else if (editing) {\n      className = 'editing';\n    } else {\n      className = 'active';\n    }\n\n    return (\n      <li className={className}>\n        <div className=\"view\">\n          <input className=\"toggle\" type=\"checkbox\" checked={done} onChange={onToggleDone} />\n          <label>\n            <span className=\"title\">{label}</span>\n            <Timer minutes={minutes} seconds={seconds} />\n            <span className=\"description\">created {timeCreated} ago</span>\n          </label>\n          <button className=\"icon icon-edit\" onClick={onToggleEditing} type=\"button\" aria-label=\"edit\" />\n          <button className=\"icon icon-destroy\" onClick={handleDelete} type=\"button\" aria-label=\"delete\" />\n        </div>\n        <form onSubmit={this.onSubmit}>\n          <input type=\"text\" className=\"edit\" value={inputValue} onChange={this.onChange} />\n        </form>\n      </li>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Task from '../Task/Task';\n\nconst TaskList = ({ todos, handleDelete, handleEdit, onToggleDone, onToggleEditing }) => {\n  const tasks = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <Task\n        key={id}\n        id={id}\n        {...itemProps}\n        handleDelete={() => handleDelete(id)}\n        handleEdit={handleEdit}\n        onToggleDone={() => onToggleDone(id)}\n        onToggleEditing={() => onToggleEditing(id)}\n      />\n    );\n  });\n\n  return (\n    <section className=\"main\">\n      <ul className=\"todo-list\">{tasks}</ul>\n    </section>\n  );\n};\n\nTaskList.defaultProps = {\n  handleDelete: () => {},\n  handleEdit: () => {},\n  onToggleDone: () => {},\n  onToggleEditing: () => {},\n};\n\nTaskList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleDelete: PropTypes.func,\n  handleEdit: PropTypes.func,\n  onToggleDone: PropTypes.func,\n  onToggleEditing: PropTypes.func,\n};\n\nexport default TaskList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TasksFilter = ({ filter, onFilterChange }) => {\n  const buttons = [\n    { name: 'all', label: 'All' },\n    { name: 'active', label: 'Active' },\n    { name: 'completed', label: 'Completed' },\n  ];\n\n  const button = buttons.map(({ name, label }) => {\n    const selected = filter === name;\n    const className = selected ? 'selected' : null;\n\n    return (\n      <li key={name}>\n        <button className={className} onClick={() => onFilterChange(name)} type=\"button\">\n          {label}\n        </button>\n      </li>\n    );\n  });\n\n  return <ul className=\"filters\">{button}</ul>;\n};\n\nTasksFilter.defaultProps = {\n  filter: 'all',\n};\n\nTasksFilter.propTypes = {\n  filter: PropTypes.string,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default TasksFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TasksFilter from '../TaskFilter/TasksFilter';\n\nconst Footer = ({ itemsLeft, clearCompleted, filter, onFilterChange }) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">{itemsLeft} items left</span>\n    <TasksFilter filter={filter} onFilterChange={onFilterChange} />\n    <button className=\"clear-completed\" onClick={clearCompleted} type=\"button\">\n      Clear completed\n    </button>\n  </footer>\n);\n\nFooter.defaultProps = {\n  itemsLeft: 3,\n  filter: 'all',\n  onFilterChange: () => {},\n};\n\nFooter.propTypes = {\n  itemsLeft: PropTypes.number,\n  filter: PropTypes.string,\n  clearCompleted: PropTypes.func.isRequired,\n  onFilterChange: PropTypes.func,\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport NewTaskForm from '../NewTaskForm/NewTaskForm';\nimport TaskList from '../TaskList/TaskList';\nimport Footer from '../Footer/Footer';\n\nimport '../../index.css';\n\nexport default class App extends Component {\n  state = {\n    todoData: [],\n    filter: 'all',\n  };\n\n  componentDidMount() {\n    const todoData = JSON.parse(localStorage.getItem('todoData')) || [];\n    const filter = JSON.parse(localStorage.getItem('filter')) || 'all';\n\n    this.setState({\n      todoData,\n      filter,\n    });\n  }\n\n  componentDidUpdate() {\n    const { todoData, filter } = this.state;\n\n    localStorage.setItem('todoData', JSON.stringify(todoData));\n    localStorage.setItem('filter', JSON.stringify(filter));\n  }\n\n  createTask = (label, minutes, seconds) => ({\n    label,\n    minutes,\n    seconds,\n    done: false,\n    editing: false,\n    creationDate: String(new Date()),\n    id: uuidv4(),\n  });\n\n  toggleProp = (arr, id, propName) =>\n    arr.map((el) => {\n      if (el.id === id) {\n        return { ...el, [propName]: !el[propName] };\n      }\n      return el;\n    });\n\n  handleDelete = (id) => {\n    this.setState(({ todoData }) => ({\n      todoData: todoData.filter((todo) => todo.id !== id),\n    }));\n  };\n\n  handleAdd = (label, minutes, seconds) => {\n    const min = minutes || '0';\n    const sec = seconds || '0';\n\n    const newTask = this.createTask(label, min, sec);\n\n    this.setState(({ todoData }) => ({\n      todoData: [...todoData, newTask],\n    }));\n  };\n\n  handleEdit = (id, text) => {\n    this.setState(({ todoData }) => {\n      const newTodos = [...todoData].map((todo) => {\n        if (todo.id === id) {\n          const item = todo;\n          item.label = text;\n        }\n        return todo;\n      });\n      return {\n        todoData: newTodos,\n      };\n    });\n  };\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => ({\n      todoData: this.toggleProp(todoData, id, 'done'),\n    }));\n  };\n\n  onToggleEditing = (id) => {\n    this.setState(({ todoData }) => ({\n      todoData: this.toggleProp(todoData, id, 'editing'),\n    }));\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n\n  clearCompleted = () => {\n    this.setState(({ todoData }) => {\n      const completedTasks = todoData.filter((todo) => !todo.done);\n\n      return {\n        todoData: completedTasks,\n      };\n    });\n  };\n\n  filterTasks = (todos, filter) => {\n    switch (filter) {\n      case 'all':\n        return todos;\n      case 'active':\n        return todos.filter((todo) => !todo.done);\n      case 'completed':\n        return todos.filter((todo) => todo.done);\n      default:\n        return todos;\n    }\n  };\n\n  render() {\n    const { todoData, filter } = this.state;\n\n    const itemsDone = todoData.filter((todo) => todo.done).length;\n    const itemsLeft = todoData.length - itemsDone;\n    const filteredTasks = this.filterTasks(todoData, filter);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTaskForm handleAdd={this.handleAdd} />\n        </header>\n        <TaskList\n          todos={filteredTasks}\n          handleDelete={this.handleDelete}\n          handleEdit={this.handleEdit}\n          onToggleDone={this.onToggleDone}\n          onToggleEditing={this.onToggleEditing}\n        />\n        <Footer\n          itemsLeft={itemsLeft}\n          clearCompleted={this.clearCompleted}\n          filter={filter}\n          onFilterChange={this.onFilterChange}\n        />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n\nconst app = React.createElement(App);\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}