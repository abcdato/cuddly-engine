{"version":3,"sources":["components/NewTaskForm/NewTaskForm.jsx","components/Task/Task.jsx","components/TaskList/TaskList.jsx","components/TaskFilter/TasksFilter.jsx","components/Footer/Footer.jsx","components/App/App.jsx","index.js"],"names":["NewTaskForm","className","placeholder","autoFocus","Task","label","active","editing","id","timeCreated","formatDistanceToNow","Date","includeSeconds","addSuffix","style","type","defaultValue","TaskList","tasks","todos","map","item","itemProps","TasksFilter","Footer","App","todoData","Math","floor","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAGaA,EAAc,WACzB,OACE,uBACEC,UAAU,WACVC,YAAY,yBACZC,WAAS,K,8BCLFC,EAAO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GACvCC,EAAcC,YAClB,IAAIC,KACJ,CAAEC,gBAAgB,GAClB,CAAEC,WAAW,IAGXC,EAAQR,EAAS,SAAW,YAMhC,OAJIC,IACFO,EAAQ,WAIR,qBAAIb,UAAWa,EAAf,UACE,sBAAKb,UAAU,OAAf,UACE,uBAAOA,UAAU,SAASc,KAAK,aAC/B,kCACE,sBAAMd,UAAU,cAAhB,SAA+BI,IAC/B,uBAAMJ,UAAU,UAAhB,qBAAmCQ,EAAnC,aAEF,wBAAQR,UAAU,mBAClB,wBAAQA,UAAU,yBAEpB,uBAAOc,KAAK,OAAOd,UAAU,OAAOe,aAAa,mBAVxBR,I,iBCdlBS,EAAW,SAAC,GAAe,IAChCC,EAD+B,EAAZC,MACLC,KAAI,SAACC,GACvB,IAAQb,EAAqBa,EAArBb,GAAOc,EAAf,YAA6BD,EAA7B,GAEA,OAAO,cAAC,EAAD,eAAmBC,GAARd,MAGpB,OACE,yBAASP,UAAU,OAAnB,SACE,oBAAIA,UAAU,YAAd,SAA2BiB,OCVpBK,G,MAAc,WACzB,OACE,qBAAItB,UAAU,UAAd,UACE,6BACE,wBAAQA,UAAU,WAAlB,mBAEF,6BACE,8CAEF,6BACE,sDCTKuB,G,MAAS,WACpB,OACE,yBAAQvB,UAAU,SAAlB,UACE,sBAAMA,UAAU,aAAhB,0BACA,cAAC,EAAD,IACA,wBAAQA,UAAU,kBAAlB,kCC+BSwB,EAlCH,WACV,IAAMC,EAAW,CACf,CACErB,MAAO,iBACPC,QAAQ,EACRC,SAAS,EACTC,GAAImB,KAAKC,MAAM,IAAAD,KAAKE,UAA6B,GAEnD,CACExB,MAAO,eACPC,QAAQ,EACRC,SAAS,EACTC,GAAImB,KAAKC,MAAM,IAAAD,KAAKE,UAA6B,GAEnD,CACExB,MAAO,cACPC,QAAQ,EACRC,SAAS,EACTC,GAAImB,KAAKC,MAAM,IAAAD,KAAKE,UAA6B,IAIrD,OACE,0BAAS5B,UAAU,UAAnB,UACE,yBAAQA,UAAU,SAAlB,UACE,uCACA,cAAC,EAAD,OAEF,cAAC,EAAD,CAAUkB,MAAOO,IACjB,cAAC,EAAD,QC7BNI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.40f7c966.chunk.js","sourcesContent":["import React from 'react';\nimport './NewTaskForm.css';\n\nexport const NewTaskForm = () => {\n  return (\n    <input\n      className=\"new-todo\"\n      placeholder=\"What needs to be done?\"\n      autoFocus\n    ></input>\n  );\n};\n","import './Task.css';\nimport { formatDistanceToNow } from 'date-fns';\n\nexport const Task = ({ label, active, editing, id }) => {\n  const timeCreated = formatDistanceToNow(\n    new Date(),\n    { includeSeconds: true },\n    { addSuffix: true }\n  );\n\n  let style = active ? 'active' : 'completed';\n\n  if (editing) {\n    style = 'editing';\n  }\n\n  return (\n    <li className={style} key={id}>\n      <div className=\"view\">\n        <input className=\"toggle\" type=\"checkbox\" />\n        <label>\n          <span className=\"description\">{label}</span>\n          <span className=\"created\">created {timeCreated} ago</span>\n        </label>\n        <button className=\"icon icon-edit\"></button>\n        <button className=\"icon icon-destroy\"></button>\n      </div>\n      <input type=\"text\" className=\"edit\" defaultValue=\"Editing task\" />\n    </li>\n  );\n};\n","import { Task } from '../Task/Task';\nimport './TaskList.css';\n\nexport const TaskList = ({ todos }) => {\n  const tasks = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return <Task key={id} {...itemProps} />;\n  });\n\n  return (\n    <section className=\"main\">\n      <ul className=\"todo-list\">{tasks}</ul>\n    </section>\n  );\n};\n","import './TaskFilter.css';\n\nexport const TasksFilter = () => {\n  return (\n    <ul className=\"filters\">\n      <li>\n        <button className=\"selected\">All</button>\n      </li>\n      <li>\n        <button>Active</button>\n      </li>\n      <li>\n        <button>Completed</button>\n      </li>\n    </ul>\n  );\n};\n","import { TasksFilter } from '../TaskFilter/TasksFilter';\nimport './Footer.css';\n\nexport const Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">1 items left</span>\n      <TasksFilter />\n      <button className=\"clear-completed\">Clear completed</button>\n    </footer>\n  );\n};\n","import './App.css';\nimport { NewTaskForm } from '../NewTaskForm/NewTaskForm';\nimport { TaskList } from '../TaskList/TaskList';\nimport { Footer } from '../Footer/Footer';\n\nconst App = () => {\n  const todoData = [\n    {\n      label: 'Completed task',\n      active: false,\n      editing: false,\n      id: Math.floor(Math.random() * (1000 - 1 + 1)) + 1,\n    },\n    {\n      label: 'Editing task',\n      active: true,\n      editing: true,\n      id: Math.floor(Math.random() * (1000 - 1 + 1)) + 1,\n    },\n    {\n      label: 'Active task',\n      active: true,\n      editing: false,\n      id: Math.floor(Math.random() * (1000 - 1 + 1)) + 1,\n    },\n  ];\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <NewTaskForm />\n      </header>\n      <TaskList todos={todoData} />\n      <Footer />\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}