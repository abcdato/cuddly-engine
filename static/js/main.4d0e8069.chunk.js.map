{"version":3,"sources":["components/NewTaskForm/NewTaskForm.jsx","components/Task/Task.jsx","components/TaskList/TaskList.jsx","components/TaskFilter/TasksFilter.jsx","components/Footer/Footer.jsx","components/App/App.jsx","index.js"],"names":["NewTaskForm","className","placeholder","autoFocus","Task","state","done","editing","handleDoneClick","setState","handleEditClick","this","props","label","id","onDeleted","timeCreated","formatDistanceToNow","Date","includeSeconds","addSuffix","type","onClick","defaultValue","Component","TaskList","todos","tasks","map","item","itemProps","TasksFilter","Footer","App","todoData","Math","floor","random","handleDelete","filter","todo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAEaA,EAAc,WACzB,OACE,uBACEC,UAAU,WACVC,YAAY,yBACZC,WAAS,K,sBCFMC,G,kNACnBC,MAAQ,CACNC,MAAM,EACNC,SAAS,G,EAGXC,gBAAkB,WAChB,EAAKC,UAAS,YACZ,MAAO,CACLH,MAFwB,EAAXA,U,EAOnBI,gBAAkB,WAChB,EAAKD,UAAS,YACZ,MAAO,CACLF,SAF2B,EAAdA,a,4CAOnB,WACE,MAAiCI,KAAKC,MAA9BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,GAAIC,EAAnB,EAAmBA,UACnB,EAA0BJ,KAAKN,MAAvBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAERS,EAAcC,YAClB,IAAIC,KACJ,CAAEC,gBAAgB,GAClB,CAAEC,WAAW,IAGTnB,EAAYK,EAAO,YAAcC,EAAU,UAAY,SAE7D,OACE,qBAAIN,UAAWA,EAAf,UACE,sBAAKA,UAAU,OAAf,UACE,uBACEA,UAAU,SACVoB,KAAK,WACLC,QAASX,KAAKH,kBAEhB,kCACE,sBAAMP,UAAU,cAAhB,SAA+BY,IAC/B,uBAAMZ,UAAU,UAAhB,qBAAmCe,EAAnC,aAEF,wBACEf,UAAU,iBACVqB,QAASX,KAAKD,kBAEhB,wBAAQT,UAAU,oBAAoBqB,QAASP,OAEjD,uBAAOM,KAAK,OAAOpB,UAAU,OAAOsB,aAAcV,MAjBrBC,O,GAnCHU,c,iBCDrBC,EAAW,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOX,EAAgB,EAAhBA,UAC1BY,EAAQD,EAAME,KAAI,SAACC,GACvB,IAAQf,EAAqBe,EAArBf,GAAOgB,EAAf,YAA6BD,EAA7B,GAEA,OAAO,cAAC,EAAD,2BAAmBC,GAAnB,IAA8Bf,UAAW,kBAAMA,EAAUD,MAA9CA,MAGpB,OACE,yBAASb,UAAU,OAAnB,SACE,oBAAIA,UAAU,YAAd,SAA2B0B,OCXpBI,G,MAAc,WACzB,OACE,qBAAI9B,UAAU,UAAd,UACE,6BACE,wBAAQA,UAAU,WAAlB,mBAEF,6BACE,8CAEF,6BACE,sDCRK+B,G,MAAS,WACpB,OACE,yBAAQ/B,UAAU,SAAlB,UACE,sBAAMA,UAAU,aAAhB,0BACA,cAAC,EAAD,IACA,wBAAQA,UAAU,kBAAlB,kCCFegC,G,kNACnB5B,MAAQ,CACN6B,SAAU,CACR,CACErB,MAAO,iBACPC,GAAIqB,KAAKC,MAAM,IAAAD,KAAKE,UAA6B,GAEnD,CACExB,MAAO,eACPC,GAAIqB,KAAKC,MAAM,IAAAD,KAAKE,UAA6B,GAEnD,CACExB,MAAO,cACPC,GAAIqB,KAAKC,MAAM,IAAAD,KAAKE,UAA6B,K,EAKvDC,aAAe,SAACxB,GACd,EAAKL,UAAS,YACZ,MAAO,CACLyB,SAF4B,EAAfA,SAEMK,QAAO,SAACC,GAAD,OAAUA,EAAK1B,KAAOA,U,4CAKtD,WACE,OACE,0BAASb,UAAU,UAAnB,UACE,yBAAQA,UAAU,SAAlB,UACE,uCACA,cAAC,EAAD,OAEF,cAAC,EAAD,CAAUyB,MAAOf,KAAKN,MAAM6B,SAAUnB,UAAWJ,KAAK2B,eACtD,cAAC,EAAD,W,GAlCyBd,cCHjCiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4d0e8069.chunk.js","sourcesContent":["import './NewTaskForm.css';\n\nexport const NewTaskForm = () => {\n  return (\n    <input\n      className=\"new-todo\"\n      placeholder=\"What needs to be done?\"\n      autoFocus\n    ></input>\n  );\n};\n","import { Component } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\n\nimport './Task.css';\n\nexport default class Task extends Component {\n  state = {\n    done: false,\n    editing: false,\n  };\n\n  handleDoneClick = () => {\n    this.setState(({ done }) => {\n      return {\n        done: !done,\n      };\n    });\n  };\n\n  handleEditClick = () => {\n    this.setState(({ editing }) => {\n      return {\n        editing: !editing,\n      };\n    });\n  };\n\n  render() {\n    const { label, id, onDeleted } = this.props;\n    const { done, editing } = this.state;\n\n    const timeCreated = formatDistanceToNow(\n      new Date(),\n      { includeSeconds: true },\n      { addSuffix: true }\n    );\n\n    const className = done ? 'completed' : editing ? 'editing' : 'active';\n\n    return (\n      <li className={className} key={id}>\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            onClick={this.handleDoneClick}\n          />\n          <label>\n            <span className=\"description\">{label}</span>\n            <span className=\"created\">created {timeCreated} ago</span>\n          </label>\n          <button\n            className=\"icon icon-edit\"\n            onClick={this.handleEditClick}\n          ></button>\n          <button className=\"icon icon-destroy\" onClick={onDeleted}></button>\n        </div>\n        <input type=\"text\" className=\"edit\" defaultValue={label} />\n      </li>\n    );\n  }\n}\n","import Task from '../Task/Task';\n\nimport './TaskList.css';\n\nexport const TaskList = ({ todos, onDeleted }) => {\n  const tasks = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return <Task key={id} {...itemProps} onDeleted={() => onDeleted(id)} />;\n  });\n\n  return (\n    <section className=\"main\">\n      <ul className=\"todo-list\">{tasks}</ul>\n    </section>\n  );\n};\n","import './TaskFilter.css';\n\nexport const TasksFilter = () => {\n  return (\n    <ul className=\"filters\">\n      <li>\n        <button className=\"selected\">All</button>\n      </li>\n      <li>\n        <button>Active</button>\n      </li>\n      <li>\n        <button>Completed</button>\n      </li>\n    </ul>\n  );\n};\n","import { TasksFilter } from '../TaskFilter/TasksFilter';\n\nimport './Footer.css';\n\nexport const Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">1 items left</span>\n      <TasksFilter />\n      <button className=\"clear-completed\">Clear completed</button>\n    </footer>\n  );\n};\n","import React, { Component } from 'react';\nimport { NewTaskForm } from '../NewTaskForm/NewTaskForm';\nimport { TaskList } from '../TaskList/TaskList';\nimport { Footer } from '../Footer/Footer';\n\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    todoData: [\n      {\n        label: 'Completed task',\n        id: Math.floor(Math.random() * (1000 - 1 + 1)) + 1,\n      },\n      {\n        label: 'Editing task',\n        id: Math.floor(Math.random() * (1000 - 1 + 1)) + 1,\n      },\n      {\n        label: 'Active task',\n        id: Math.floor(Math.random() * (1000 - 1 + 1)) + 1,\n      },\n    ],\n  };\n\n  handleDelete = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: todoData.filter((todo) => todo.id !== id),\n      };\n    });\n  };\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTaskForm />\n        </header>\n        <TaskList todos={this.state.todoData} onDeleted={this.handleDelete} />\n        <Footer />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}