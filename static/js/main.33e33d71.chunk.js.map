{"version":3,"sources":["components/NewTaskForm/NewTaskForm.jsx","components/Task/Task.jsx","components/TaskList/TaskList.jsx","components/TaskFilter/TasksFilter.jsx","components/Footer/Footer.jsx","components/App/App.jsx","index.js"],"names":["NewTaskForm","state","label","onChange","e","setState","target","value","onSubmit","preventDefault","trim","props","handleAdd","this","className","placeholder","Component","Task","handleEdit","id","onToggleEditing","handleDelete","onToggleDone","done","editing","creationDate","timeCreated","formatDistanceToNow","includeSeconds","type","checked","onClick","onBlur","TaskList","todos","tasks","map","item","itemProps","TasksFilter","filter","onFilterChange","button","name","Footer","itemsLeft","clearCompleted","App","todoData","createTask","todo","addEditedItem","updateItem","newArr","ind","findIndex","el","newTask","text","toggleProp","Date","uuidv4","arr","propName","i","oldItem","newItem","slice","itemsDone","length","filteredTasks","filterTasks","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33e33d71.chunk.js","sourcesContent":["import { Component } from 'react';\n\nimport './NewTaskForm.css';\n\nexport default class NewTaskForm extends Component {\n  state = {\n    label: '',\n  };\n\n  onChange = (e) => {\n    this.setState({\n      label: e.target.value,\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.label.trim() === '') {\n      this.setState({\n        label: '',\n      });\n      return;\n    }\n    this.props.handleAdd(this.state.label);\n    this.setState({\n      label: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={this.state.label}\n          onChange={this.onChange}\n        ></input>\n      </form>\n    );\n  }\n}\n","import { formatDistanceToNow } from 'date-fns';\n\nimport './Task.css';\n\nimport { Component } from 'react';\n\nexport default class Task extends Component {\n  state = {\n    label: this.props.label,\n  };\n\n  onChange = (e) => {\n    this.setState({\n      label: e.target.value,\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.state.label.trim() === '') {\n      this.props.handleDelete();\n      return;\n    }\n    this.props.handleEdit(this.props.id, this.state.label);\n    this.props.onToggleEditing(this.props.id);\n  };\n\n  render() {\n    const {\n      label,\n      handleDelete,\n      onToggleDone,\n      onToggleEditing,\n      done,\n      editing,\n      creationDate,\n    } = this.props;\n\n    const timeCreated = formatDistanceToNow(creationDate, {\n      includeSeconds: true,\n    });\n\n    const className = done ? 'completed' : editing ? 'editing' : 'active';\n\n    return (\n      <li className={className}>\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={done}\n            onChange={onToggleDone}\n          />\n          <label>\n            <span className=\"description\">{label}</span>\n            <span className=\"created\">created {timeCreated} ago</span>\n          </label>\n          <button className=\"icon icon-edit\" onClick={onToggleEditing}></button>\n          <button className=\"icon icon-destroy\" onClick={handleDelete}></button>\n        </div>\n        <form onSubmit={this.onSubmit}>\n          <input\n            type=\"text\"\n            className=\"edit\"\n            value={this.state.label}\n            onChange={this.onChange}\n            onBlur={this.onSubmit}\n          />\n        </form>\n      </li>\n    );\n  }\n}\n\n// export const Task = ({\n//   label,\n//   id,\n//   handleDelete,\n//   handleEdit,\n//   onToggleDone,\n//   onToggleEditing,\n//   done,\n//   editing,\n//   creationDate,\n// }) => {\n//   const timeCreated = formatDistanceToNow(creationDate, {\n//     includeSeconds: true,\n//   });\n//   const className = done ? 'completed' : editing ? 'editing' : 'active';\n\n//   return (\n//     <li className={className} key={id}>\n//       <div className=\"view\">\n//         <input\n//           className=\"toggle\"\n//           type=\"checkbox\"\n//           checked={done}\n//           onChange={onToggleDone}\n//         />\n//         <label>\n//           <span className=\"description\">{label}</span>\n//           <span className=\"created\">created {timeCreated} ago</span>\n//         </label>\n//         <button className=\"icon icon-edit\" onClick={onToggleEditing}></button>\n//         <button className=\"icon icon-destroy\" onClick={handleDelete}></button>\n//       </div>\n//       <input type=\"text\" className=\"edit\" value={label} onChange={handleEdit} />\n//     </li>\n//   );\n// };\n","import Task from '../Task/Task';\n\nimport './TaskList.css';\n\nexport const TaskList = ({\n  todos,\n  handleDelete,\n  handleEdit,\n  onToggleDone,\n  onToggleEditing,\n}) => {\n  const tasks = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <Task\n        key={id}\n        id={id}\n        {...itemProps}\n        handleDelete={() => handleDelete(id)}\n        handleEdit={handleEdit}\n        onToggleDone={() => onToggleDone(id)}\n        onToggleEditing={() => onToggleEditing(id)}\n      />\n    );\n  });\n\n  return (\n    <section className=\"main\">\n      <ul className=\"todo-list\">{tasks}</ul>\n    </section>\n  );\n};\n","import './TaskFilter.css';\n\nexport const TasksFilter = ({ filter, onFilterChange }) => {\n  const buttons = [\n    { name: 'all', label: 'All' },\n    { name: 'active', label: 'Active' },\n    { name: 'completed', label: 'Completed' },\n  ];\n\n  const button = buttons.map(({ name, label }) => {\n    const selected = filter === name;\n    const className = selected ? 'selected' : null;\n\n    return (\n      <li key={name}>\n        <button className={className} onClick={() => onFilterChange(name)}>\n          {label}\n        </button>\n      </li>\n    );\n  });\n\n  return <ul className=\"filters\">{button}</ul>;\n};\n","import { TasksFilter } from '../TaskFilter/TasksFilter';\n\nimport './Footer.css';\n\nexport const Footer = ({\n  itemsLeft,\n  clearCompleted,\n  filter,\n  onFilterChange,\n}) => {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">{itemsLeft} items left</span>\n\n      <TasksFilter filter={filter} onFilterChange={onFilterChange} />\n      <button className=\"clear-completed\" onClick={clearCompleted}>\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","import React, { Component } from 'react';\nimport NewTaskForm from '../NewTaskForm/NewTaskForm';\nimport { TaskList } from '../TaskList/TaskList';\nimport { Footer } from '../Footer/Footer';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    todoData: [\n      this.createTask('First task'),\n      this.createTask('Second task'),\n      this.createTask('Third task'),\n    ],\n    filter: 'all',\n  };\n\n  createTask(label) {\n    return {\n      label,\n      done: false,\n      editing: false,\n      creationDate: new Date(),\n      id: uuidv4(),\n    };\n  }\n\n  toggleProp(arr, id, propName) {\n    const i = arr.findIndex((el) => el.id === id);\n    const oldItem = arr[i];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n    return [...arr.slice(0, i), newItem, ...arr.slice(i + 1)];\n  }\n\n  handleDelete = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: todoData.filter((todo) => todo.id !== id),\n      };\n    });\n  };\n\n  addEditedItem = (id, updateItem) => {\n    this.setState(({ todoData }) => {\n      const newArr = [...todoData];\n      const ind = newArr.findIndex((el) => el.id === id);\n      newArr[ind] = updateItem;\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  handleAdd = (label) => {\n    const newTask = this.createTask(label);\n\n    this.setState(({ todoData }) => {\n      return {\n        todoData: [...todoData, newTask],\n      };\n    });\n  };\n\n  handleEdit = (id, text) => {\n    this.setState(({ todoData }) => {\n      const newTodos = [...todoData].map((todo) => {\n        if (todo.id === id) {\n          todo.label = text;\n        }\n        return todo;\n      });\n      return {\n        todoData: newTodos,\n      };\n    });\n  };\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProp(todoData, id, 'done'),\n      };\n    });\n  };\n\n  onToggleEditing = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProp(todoData, id, 'editing'),\n      };\n    });\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n\n  clearCompleted = () => {\n    this.setState(({ todoData }) => {\n      const completedTasks = todoData.filter((todo) => !todo.done);\n\n      return {\n        todoData: completedTasks,\n      };\n    });\n  };\n\n  filterTasks(todos, filter) {\n    switch (filter) {\n      case 'all':\n        return todos;\n      case 'active':\n        return todos.filter((todo) => !todo.done);\n      case 'completed':\n        return todos.filter((todo) => todo.done);\n      default:\n        return todos;\n    }\n  }\n\n  render() {\n    const { todoData, filter } = this.state;\n    const itemsDone = todoData.filter((todo) => todo.done).length;\n    const itemsLeft = todoData.length - itemsDone;\n    const filteredTasks = this.filterTasks(todoData, filter);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTaskForm handleAdd={this.handleAdd} />\n        </header>\n        <TaskList\n          todos={filteredTasks}\n          handleDelete={this.handleDelete}\n          handleEdit={this.handleEdit}\n          addEditedItem={this.addEditedItem}\n          onToggleDone={this.onToggleDone}\n          onToggleEditing={this.onToggleEditing}\n        />\n        <Footer\n          itemsLeft={itemsLeft}\n          clearCompleted={this.clearCompleted}\n          filter={filter}\n          onFilterChange={this.onFilterChange}\n        />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}